#!/bin/bash
#titre          :iptables.rules
#description    :Script de configuration d'un parefeu IPv4/IPv6 via Iptables.
#auteur         :Cyberman
#date           :29-08-2016
#version        :0.1    
#usage          :
#notes          :
#==============================================================================

#########################################################################
### Étape0: Définitions des variables et vérifications des prérequis.
## Vérification des prérequis
# On doit disposer des droits root pour continuer
if [ "$(id -u)" != "0" ]; then
   echo "Vous devez disposer des droits root pour executer ce script" 1>&2
   exit 1
fi
## Définitions des variables
# IPv4
IPT=/sbin/iptables
#IPv6
IP6T=/sbin/ip6tables
#########################################################################
### Étape1: Préparation du système avant l'application de règles
## Efface toutes les règles en cours. -F toutes. -X utilisateurs
# IPv4
$IPT -t filter -F
$IPT -t filter -X
$IPT -t nat -F
$IPT -t nat -X
$IPT -t mangle -F
$IPT -t mangle -X
# IPv6
$IP6T -t filter -F
$IP6T -t filter -X
# Il n'y a pas de NAT en IPv6, on commente les règles pour se souvenir que ce n'est pas un oubli.
#$IP6T -t nat -F
#$IP6T -t nat -X
$IP6T -t mangle -F
$IP6T -t mangle -X

## Permettre à une connexion ouverte de recevoir du trafic autorise dans un sans (state full)
# IPv4
$IPT -t filter -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$IPT -t filter -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$IPT -t filter -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
# IPv6
$IP6T -t filter -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$IP6T -t filter -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$IP6T -t filter -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
## Stratégie (-P) par défaut : on bloque tout par defaut
# IPv4
$IPT -t filter -P INPUT DROP
$IPT -t filter -P FORWARD DROP
$IPT -t filter -P OUTPUT DROP
# IPv6
$IP6T -t filter -P INPUT DROP
$IP6T -t filter -P FORWARD DROP
$IP6T -t filter -P OUTPUT DROP
## On autorise les flux en Loopback
# IPv4
$IPT -t filter -A INPUT -i lo -j ACCEPT
$IPT -t filter -A OUTPUT -o lo -j ACCEPT
# IPv6
$IP6T -t filter -A INPUT -i lo -j ACCEPT
$IP6T -t filter -A OUTPUT -o lo -j ACCEPT
# On autorise l'ICMP sortant
# ICMPv4: J'envoie tous les codes ICMP de tous types à TOUT LE MONDE
$IPT -t filter -A OUTPUT -p icmp -j ACCEPT
# ICMPv6: J'envoie tous les codes ICMP de tous types à TOUT LE MONDE
$IP6T -t filter -A OUTPUT -p ipv6-icmp -j ACCEPT
#########################################################################
### Étape2: Protection face aux attaques réseaux connues.
## 
# IPv4
# IPv6
## Blocage des paquets anormaux/inutiles.
# IPv6: On désactive les paquets RH0 devenus obsolètes (ils sont dépréciés -> RFC 5095)
$IP6T -A INPUT -m rt --rt-type 0 -j DROP
$IP6T -A OUTPUT -m rt --rt-type 0 -j DROP
$IP6T -A FORWARD -m rt --rt-type 0 -j DROP

#########################################################################
### Étape3: On charge les blacklistes d'adresses IP (v4 et v6).
# IPv4

#########################################################################
### Étape4: Règles de flux personnalisées.
## Activation (ou pas) du routage (suffit de décommenter la ligne pour l'activer)
# IPv4

# IPv6
#echo "1" >/proc/sys/net/ipv6/conf/all/forwarding
## Règles concernant les flux entrants (chaine INPUT)
# IPv4
# IPv6
## Règles concernant les flux sortants (chaine OUTPUT)
# IPv4
# IPv6
## Règles concernant les flux en transit (chaine FORWARD)
# IPv4
# IPv6

#########################################################################
### Étape5: Marquage des flux bloqués pour faciliter la recherche dans les logs

## IPv4: On mets en place un marquage pour faciliter l'exploitation des logs
#Création de la chaine dédiée au marquage des flux en transit bloqués 
$IPT -N LOG_DROP_FORWARD
$IPT -A LOG_DROP_FORWARD -j LOG --log-prefix '[IPTABLES IPv4 FORWARD DROP] : ' #On ajoute un prefixe à tous les flux journalisés
$IPT -A LOG_DROP_FORWARD -j DROP #Apres avoir marqué les flux bloqués, on les DROP.  
#Création de la chaine dédiée au marquage des flux entrant bloqués
$IPT -N LOG_DROP_INPUT 
$IPT -A LOG_DROP_INPUT -j LOG --log-prefix '[IPTABLES IPv4 INPUT DROP] : ' #On ajoute un prefixe à tous les flux journalisés
$IPT -A LOG_DROP_INPUT -j DROP #Apres avoir marqué les flux bloqués, on les DROP.  
#Création de la chaine dédiée au marquage des flux sortants bloqués
$IPT -N LOG_DROP_OUTPUT
$IPT -A LOG_DROP_OUTPUT -j LOG --log-prefix '[IPTABLES IPv4 OUTPUT DROP] : ' #On ajoute un prefixe à tous les flux journalisés
$IPT -A LOG_DROP_OUTPUT -j DROP #Apres avoir marqué les flux bloqués, on les DROP.
#Création de la chaine dédiée au marquage des flux anormaux/inutiles 
$IPT -N LOG_DROP_ANORMAUX
$IPT -A LOG_DROP_ANORMAUX -j LOG --log-prefix '[IPTABLES IPv4 PAQUETS ANORMAUX] : ' #On ajoute un prefixe à tous les flux journalisés
$IPT -A LOG_DROP_ANORMAUX -j DROP #Apres avoir marqué les flux bloqués, on les DROP.
# On envoi les flux non précédements autorisés dans les chaines qui préfixes les logs.
$IPT -A FORWARD -j LOG_DROP_FORWARD #On envoie tout ce qui n'est pas autorisé dans la chaine LOG_DROP pour marquer les logs d'un prefixe
$IPT -A INPUT -j LOG_DROP_INPUT #On envoie tout ce qui n'est pas autorisé dans la chaine LOG_DROP pour marquer les logs d'un prefixe
$IPT -A OUTPUT -j LOG_DROP_OUTPUT #On envoie tout ce qui n'est pas autorisé dans la chaine LOG_DROP pour marquer les logs d'un prefixe 

# IPv6: On mets en place un marquage pour faciliter l'exploitation des logs
#Création de la chaine dédiée au marquage des flux en transit bloqués 
$IP6T -N LOG_DROP_FORWARD
$IP6T -A LOG_DROP_FORWARD -j LOG --log-prefix '[IPTABLES IPv6 FORWARD DROP] : ' #On ajoute un prefixe à tous les flux journalisés
$IP6T -A LOG_DROP_FORWARD -j DROP #Apres avoir marqué les flux bloqués, on les DROP.  
#Création de la chaine dédiée au marquage des flux entrant bloqués
$IP6T -N LOG_DROP_INPUT 
$IP6T -A LOG_DROP_INPUT -j LOG --log-prefix '[IPTABLES IPv6 INPUT DROP] : ' #On ajoute un prefixe à tous les flux journalisés
$IP6T -A LOG_DROP_INPUT -j DROP #Apres avoir marqué les flux bloqués, on les DROP.  
#Création de la chaine dédiée au marquage des flux sortants bloqués
$IP6T -N LOG_DROP_OUTPUT
$IP6T -A LOG_DROP_OUTPUT -j LOG --log-prefix '[IPTABLES IPv6 OUTPUT DROP] : ' #On ajoute un prefixe à tous les flux journalisés
$IP6T -A LOG_DROP_OUTPUT -j DROP #Apres avoir marqué les flux bloqués, on les DROP.
#Création de la chaine dédiée au marquage des flux anormaux/inutiles 
$IP6T -N LOG_DROP_ANORMAUX
$IP6T -A LOG_DROP_ANORMAUX -j LOG --log-prefix '[IPTABLES IPv6 PAQUETS ANORMAUX] : ' #On ajoute un prefixe à tous les flux journalisés
$IP6T -A LOG_DROP_ANORMAUX -j DROP #Apres avoir marqué les flux bloqués, on les DROP.  
# On envoi les flux non précédements autorisés dans les chaines qui préfixes les logs.
$IP6T -A FORWARD -j LOG_DROP_FORWARD #On envoie tout ce qui n'est pas autorisé dans la chaine LOG_DROP pour marquer les logs d'un prefixe
$IP6T -A INPUT -j LOG_DROP_INPUT #On envoie tout ce qui n'est pas autorisé dans la chaine LOG_DROP pour marquer les logs d'un prefixe
$IP6T -A OUTPUT -j LOG_DROP_OUTPUT #On envoie tout ce qui n'est pas autorisé dans la chaine LOG_DROP pour marquer les logs d'un prefixe
#########################################################################
### Étape finale: Le script a chargé l'ensemble des règles IPtables, on affiche à l'administrateur que c'est terminé.
echo "firewall started [OK]"
#FIN